{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p>This wiki space represents documentation on infrastructure within Gnome Trading Group.</p>"},{"location":"components/1-risk-manager/","title":"Risk Manager","text":"<p>The risk manager is a key component within a trading system. It is used to monitor risk metrics, monitor shutdown signals, monitor health of the system, and much more.</p> <p>Our risk manager connects to our trading UI via the risk database. It polls the risk database frequently to monitor any changes within risk metrics or shutdown signals.</p> <p>TODO: Write more.</p>"},{"location":"data/","title":"Overview","text":"<p>We use a custom data format to represent market data in memory. The goal is to optimize on efficiency within transporting messages across different parts of the trading system and minimizing memory footprint in storage.</p>"},{"location":"data/1-symbology/","title":"Symbology","text":"<p>Symbology is a complicated piece to get correct across trading environments. We use a symbology structure which can span multiple markets and asset classes.</p>"},{"location":"data/1-symbology/#products","title":"Products","text":"<p>The broadest definition withim symbology is a product. A product (also called a parent product or parent in the context of derivates) refers to any real or synthetic asset whose data is provided by the market. A product describes a group of securities belonging to a given economic sector or market segment. Also, products are often fungible, meaning they may be traded on more than one venue. In the case of equities, this means that products and securities are the same asset, in contrast to derivatives such as futures and options products.</p> <p>A futures product for a certain underlying has a range of expirations. To avoid ambiguity, we refer to the collection of all expirations as a parent, and specific expiration as a security. So, for example, <code>BTC-USDT.FUT</code> is the parent of <code>BTC-USDT0329</code> and <code>BTC-USDT0629</code>.</p> <p>An options product for a certain underlying has a range of both expirations and strikes. To avoid ambiguity, we refer to the collection of all expirations and strikes as a parent, and specific expiration with strike as n security. So, for example, <code>BTC-USDT.OPT</code> is the parent of <code>BTC-USDT20210205C210</code>. Note: we classify option combinations as part of the options products.</p> <p>A perpetual futures product for a certain underlying with no expiry. These function similarly to equities in that the products will match the securities with an additional suffix, for example <code>BTC-USDT.PERP</code>.</p>"},{"location":"data/1-symbology/#securities","title":"Securities","text":"<p>A security (also called a child security or child) is a tradable asset, real or synthetic, on a specific market. Securities define all attributes of what is traded, e.g. product complex, product group, expiration, and strike price.</p> <p>Most products will trade across exchanges. For example, the product <code>BTC-USDT</code> will be traded across many exchanges simultaneously; however, the prices and feeds will differ drastically across exchanges as flows are different. To resolve these issues, we introduce the term listing to refer to a tradeable entity on a specific exchange.</p>"},{"location":"data/1-symbology/#listings","title":"Listings","text":"<p>A listing is a security specific to a certain venue, which is not transferable or representable across other venues (non-fungible). While this makes a listing synonymous with a securities for equities, it's important to be mindful of the distinction if you intend on extending into other asset classes.</p>"},{"location":"data/1-symbology/#examples","title":"Examples","text":"Equities Futures Options Perpetual Futures Product <code>BTC-USDT</code> <code>BTC-USDT.FUT</code> <code>BTC-USDT.OPT</code> <code>BTC-USDT.PERP</code> Security <code>BTC-USDT</code> <code>BTC-USDT0329</code> <code>BTC-USDT20210205C210</code> <code>BTC-USDT.PERP</code> Listing <code>BTC-USDT</code> on Binance <code>BTC-USDT0329</code> on Bitmex <code>BTC-USDT20210205C210</code> on Bybit <code>BTC-USDT.PERP</code> Binance"},{"location":"data/2-layout/","title":"Data Layout","text":"<p>This section summarizes how market data is encoded with memory.</p> <p>We use SBE to store our proprietary data format in memory.</p>"},{"location":"data/2-layout/#market-data-encoding","title":"Market Data Encoding","text":"<p>The market data encoding is a generalized form of any market update representing market-by-order (MBO).</p> Field Type Description Optional? <code>exchange_id</code> uint16_t The exchange ID assigned by us. N <code>security_id</code> uint32_t The security ID assigned by us. N <code>ts_event</code> uint64_t The matching-engine-received timestamp expressed as the number of nanoseconds since the UNIX epoch. N <code>order_id</code> uint64_t The order ID assigned by the venue. Y <code>client_oid</code> uint64_t The client order ID provided as an input into the exchange. Y <code>price</code> int64_t The order price where every 1 unit corresponds to 1e-9, i.e. 1/1,000,000,000 or 0.000000001. N <code>size</code> uint32_t The order quantity. N <code>flags</code> uint8_t A bit field consisting of pre-defined flags. Y <code>action</code> char The event action. Can be Add, Cancel, Modify, cleaR book, Trade, or Fill. Read more about each type here N <code>side</code> char The order side. Can be Ask, Bid, or None. N <code>ts_recv</code> uint64_t The capture-server-received timestamp expressed as the number of nanoseconds since the UNIX epoch. N <code>ts_in_delta</code> int32_t The matching-engine-sending timestamp expressed as the number of nanoseconds before <code>ts_recv</code>. This can be negative if the exchange and local clocks are out of sync. N <code>sequence</code> uint32_t The message sequence number assigned at the exchange or internally if not present. N"},{"location":"data/2-layout/#order-encoding","title":"Order Encoding","text":"<p>The order encoding is a generalized form of any outgoing order to an exchange.</p> Field Type Description Optional? <code>exchange_id</code> uint16_t The exchange ID assigned by us. N <code>strategy_id</code> uint16_t The strategy ID submitting the order. N <code>security_id</code> uint32_t The security ID assigned by us. N <code>ts_writev</code> uint64_t The sending timestamp expressed as the number of nanoseconds since the UNIX epoch. N <code>client_oid</code> uint64_t The client order ID provided as an input into the exchange. N <code>price</code> int64_t The order price where every 1 unit corresponds to 1e-9, i.e. 1/1,000,000,000 or 0.000000001. N <code>size</code> uint32_t The order quantity. N <code>side</code> char The order side. Can be Ask or Bid N <code>flags</code> uint8_t A bit field consisting of pre-defined flags Y <code>type</code> uint8_t The order type. Can be limit, market, stop limit, or stop market. Read more about each type here. N <code>tif</code> uint8_t The order's time in force. Can be good-till-canceled (GTC), good-till-date (GTD), immediate-or-cancel (IOC), or fill-or-kill (FOK). Note, most exchanges only support a subset of these. Read more about each type here. N"},{"location":"data/3-flags/","title":"Flags","text":"<p>Flags are a bitset on market updates and outgoing orders used to denote certain properties on the message.</p>"},{"location":"data/3-flags/#market-data-flags","title":"Market Data Flags","text":"Flag Value Description <code>F_LAST</code> <code>1 &lt;&lt; 7  # 128</code> Last message in the packet from a given exchange on an <code>security_id</code>. <code>F_TOB</code> <code>1 &lt;&lt; 6  # 64</code> Top-of-book message, not an individual order. <code>F_SNAPSHOT</code> <code>1 &lt;&lt; 5  # 32</code> Message sourced from a replay, such as a S3 recording. <code>F_MBP</code> <code>1 &lt;&lt; 4  # 16</code> Aggregated price level message, not an individual order. <code>F_BAD_TS_RECV</code> <code>1 &lt;&lt; 3  # 8</code> The <code>ts_recv</code> value is inaccurate due to clock issues or packet reordering. <code>F_MAYBE_BAD_BOOK</code> <code>1 &lt;&lt; 2  # 4</code> An unrecoverable gap was detected in the channel."},{"location":"data/3-flags/#order-flags","title":"Order Flags","text":"<p>TODO</p>"},{"location":"data/4-actions/","title":"Actions","text":"<p>There are multiple types of actions. A single market update may be decoded into multiple market order messages with different actions.</p>"},{"location":"data/4-actions/#add","title":"Add","text":"<p>Add inserts a new order into the book. The order will be placed at the back of the queue position.</p>"},{"location":"data/4-actions/#modify","title":"Modify","text":"<p>Modify is used to change the price or size within an order. If the price changes or the order size increases, the queue position of the order is lost.</p>"},{"location":"data/4-actions/#cancel","title":"Cancel","text":"<p>Cancel is used to partially or fully cancel an order (or depth level for market-by-price). If the <code>size</code> of the update represents the current <code>size</code> within the book, the quote is fully removed, otherwise it is partially updated and queue position remains (TODO: check this).</p> <p>Cancel and modify are very similar actions. They are separated for a few reasons:</p> <ul> <li>Modify has the ability to affect queue position within an orderbook whereas cancel does not.</li> <li>Modify can affect price in addition to size.</li> <li>Clear distinction between messages from the exchange as some use a combination of modify + cancel to represent different use-cases.</li> <li>For example, exchanges use cancel to represent expiries via time-in-force.</li> </ul>"},{"location":"data/4-actions/#clear","title":"Clear","text":"<p>Clear is used to wipe a book entirely. Useful for restarting a trading day.</p>"},{"location":"data/4-actions/#trade","title":"Trade","text":"<p>Trade does not modify an order book.</p> <p>Trade represents when an order is matched successfully on an exchange. This could be from a market order aggressively taking a side, or a limit order crossing the spread. The <code>side</code> of the message represents the aggressor order's side. For example, if one sends a market order to buy <code>BTC-USDT</code>, the corresponding trade message will have a side of <code>B</code> and will hit the asks of a book representing an up-tick.</p>"},{"location":"data/4-actions/#fill","title":"Fill","text":"<p>Fill does not modify an order book.</p> <p>Fill represents when a resting order gets partially or fully filled. Fills are always accompanied by cancel actions that will affect the book. The <code>side</code> of the message represents which side the resting order was sitting on.</p>"},{"location":"data/5-orders/","title":"Orders and Time-in-Force (TIF)","text":""},{"location":"data/5-orders/#orders","title":"Orders","text":"<p>There are multiple order types encoding within our system. Each exchange will not support all of the order types, and it is up to the strategy itself to send proper orders to market gateways.</p>"},{"location":"data/5-orders/#limit","title":"Limit","text":"<p>Posts a passive order to a book.</p>"},{"location":"data/5-orders/#market","title":"Market","text":"<p>Sends an agressive order to a book crossing the spread.</p>"},{"location":"data/5-orders/#stop-limit","title":"Stop Limit","text":"<p>The limit order will be posted once the bids (or asks) crosses the price within the order.</p>"},{"location":"data/5-orders/#stop-market","title":"Stop Market","text":"<p>Sends a market order once the bids (or asks) crosses the price within the order.</p>"},{"location":"data/5-orders/#tif","title":"TIF","text":"<p>Time-in-force (TIF) is used to manage expiry conditions within an order.</p>"},{"location":"data/5-orders/#good-till-canceled","title":"Good-till-canceled","text":"<p>GTC is used for orders which cancelations are managed by the submitter. This is the default type of TIF.</p>"},{"location":"data/5-orders/#good-till-date","title":"Good-till-date","text":"<p>GTD is used to expire an order at a certain time in the future.</p>"},{"location":"data/5-orders/#immediate-or-cancel","title":"Immediate-or-cancel","text":"<p>IOC is an order which has to be executed immediately and fully, or as fully as possible. Non-executed parts of an IOC order are deleted without entry in the order book.</p>"},{"location":"data/5-orders/#fill-or-kill","title":"Fill-or-kill","text":"<p>FOK is an order which has to be executed and fully or not at all.</p>"},{"location":"data/6-securities/","title":"Security Master","text":"<p>A security master is the source of truth for how securities are represented within a system. It is used to translate between exchange symbols and internal representation so the same securities can be traded seamlessly across multiple exchanges.</p> <p>The security master contains a central database of all tradeable assets within our universe. Further, the security master maintains a databases of products, exchanges, and listings to convert from internal representations to exchange-understandable representations.</p>"},{"location":"data/6-securities/#product-table","title":"Product Table","text":"Field Type Description <code>product_id</code> uint16_t The product ID. Auto-increment ID. <code>symbol</code> string The string representation of the product. <code>type</code> uint8_t The integer type of the product. <code>date_created</code> timestamp The timestamp the entry was created. <code>date_modified</code> timestamp The timestamp the entry was created."},{"location":"data/6-securities/#security-table","title":"Security Table","text":"Field Type Description <code>security_id</code> uint32_t The security ID. Auto-increment ID. <code>symbol</code> string The string representation of the security. <code>description</code> string A description of the security. <code>type</code> uint8_t The integer type of the security. <code>date_created</code> timestamp The timestamp the entry was created. <code>date_modified</code> timestamp The timestamp the entry was created."},{"location":"data/6-securities/#listing-table","title":"Listing Table","text":"Field Type Description <code>exchange_id</code> uint16_t The exchange ID. <code>security_id</code> uint32_t The security ID. <code>exchange_security_id</code> any The exchange's internal representation of the security. <code>exchange_security_symbol</code> string The exchange's internal representation of the security's symbol. <code>date_created</code> timestamp The timestamp the entry was created. <code>date_modified</code> timestamp The timestamp the entry was created."},{"location":"data/6-securities/#exchange-table","title":"Exchange Table","text":"Field Type Description <code>exchange_id</code> uint16_t The exchange ID. Auto-increment ID. <code>exchange_name</code> string The name of the exchange. <code>date_created</code> timestamp The timestamp the entry was created. <code>date_modified</code> timestamp The timestamp the entry was created."},{"location":"data/7-performance-metrics/","title":"Peformance Metrics","text":"<p>This space will be used to document how we save performance metrics.</p>"},{"location":"data/8-system-metrics/","title":"System Metrics","text":"<p>This space will be used to document how we save system metrics.</p>"},{"location":"data/9-risk-database/","title":"Risk Database","text":"<p>This space will be used to document how we maintain the risk database.</p>"},{"location":"infrastructure/1-miro/","title":"Miro","text":"<p>Our high-level design diagram is available at Miro. The following sections in the infrastructure are used for low-level design of the major pieces of infrastructure.</p>"}]}